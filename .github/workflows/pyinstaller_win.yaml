name: Python package

on: [push]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Display Python version
        run: |
          (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry install
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry run pip3 install pyinstaller
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry run pyinstaller -F -n PyLedger simple_ledger/cli/pyledger.py
          ls dist
          C:\Users\runneradmin\AppData\Roaming\Python\Scripts\poetry run pyinstaller simple_ledger/cli/pyledger.spec

      - name: Upload build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: flet-pack-result-windows
          path: dist/PyLedger.exe
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
  
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Display Python version
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install
          poetry run pip3 install pyinstaller
          poetry run pyinstaller -F -n PyLedger simple_ledger/cli/pyledger.py
          ls dist
          poetry run pyinstaller simple_ledger/cli/pyledger.spec

      - name: Upload build as artifact
        uses: actions/upload-artifact@v3
        with:
          name: flet-pack-result-linux
          path: dist/PyLedger
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
